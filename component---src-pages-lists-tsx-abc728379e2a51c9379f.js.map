{"version":3,"file":"component---src-pages-lists-tsx-abc728379e2a51c9379f.js","mappings":"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","sources":["webpack://slap-kommerce-web/./src/tables/tables.ts","webpack://slap-kommerce-web/./src/components/Layout.tsx","webpack://slap-kommerce-web/./src/components/ListDetailV3.tsx","webpack://slap-kommerce-web/./src/pages/lists/[...].tsx"],"sourcesContent":["import { supabase } from '../supabase';\n\nexport async function fetchPriceItems() {\n  const { data, error } = await supabase\n    .from('price_items')\n    .select('uid, name, sku, bulk, carton');\n\n  if (error) {\n    console.error('Error fetching price items:', error.message);\n    return [];\n  }\n\n  return data.map(item => ({\n    uid: item.uid,\n    item: item.name,\n    sku: item.sku,\n    bulk: parseFloat(item.bulk),\n    carton: parseInt(item.carton),\n    qty: 1,\n    sell: 0\n  }));\n}\n\n\n\nexport async function fetchPriceItemById(id: string) {\n  const { data, error } = await supabase\n    .from('price_items')\n    .select('*')\n    .eq('uid', id)\n    .single();\n\n  if (error) {\n    console.error('Fetch item error:', error.message);\n    return null;\n  }\n\n  return data;\n}\n\nexport async function savePriceItem(uid: string, updates: any) {\n  const { error } = await supabase\n    .from('price_items')\n    .update(updates)\n    .eq('uid', uid);\n\n  return { success: !error, error };\n}\n\nexport async function generateNextSku() {\n  const { count, error } = await supabase\n    .from('price_items')\n    .select('uid', { count: 'exact', head: true });\n\n  if (error) {\n    console.error('Error counting rows in price_items:', error.message);\n    return null;\n  }\n\n  const nextNumber = (count ?? 0) + 1;\n\n  const skuNumber = nextNumber.toString().padStart(3, '0'); // ensures 3 digits\n  return `SKU-${skuNumber}`;\n}\n\nexport async function fetchSupplyLists(): Promise<string[]> {\n  const { data, error } = await supabase\n    .from('supply_list_meta')\n    .select('list_name')\n    .order('list_name', { ascending: true });\n\n  if (error) {\n    console.error('Error fetching list names from meta:', error.message);\n    return [];\n  }\n\n  return data.map(row => row.list_name);\n}\n\n\n\nexport async function fetchSupplyListDetails(listName: string) {\n  const { data, error } = await supabase\n    .from('supply_list')\n    .select(`\n      quantity,\n      sell,\n      item:price_items (\n        uid,\n        name,\n        sku,\n        bulk,\n        carton\n      )\n    `)\n    .eq('list_name', listName);\n\n  if (error) {\n    console.error('Error fetching supply list details:', error.message);\n    return { items: [], meta: null };\n  }\n\n  const items = (data || []).map(row => {\n    const costEa = parseFloat(row.item.bulk) / row.item.carton;\n    const sell = parseFloat(row.sell ?? 0);\n    const qty = row.quantity ?? 1;\n    const profit = (sell - costEa) * qty;\n\n    return {\n      uid: row.item.uid,\n      item: row.item.name,\n      sku: row.item.sku,\n      bulk: parseFloat(row.item.bulk),\n      carton: row.item.carton,\n      costEa,\n      qty,                 // ✅ Important: use 'qty' not 'quantity'\n      sell,\n      profit\n    };\n  });\n\n  const { data: metaData, error: metaError } = await supabase\n    .from('supply_list_meta')\n    .select('margin, shipping_rate')\n    .eq('list_name', listName)\n    .limit(1)\n    .single();\n\n  if (metaError) {\n    console.error('Error fetching supply list meta:', metaError.message);\n  }\n\n  return {\n    items,\n    meta: metaData || null\n  };\n}\n\n\nexport async function saveSupplyListItems(listName: string, items: any[], upsert = false) {\n  // Convert to valid rows with required fields\n  const rows = (items || [])\n    .filter(i => i.uid && typeof i.qty === 'number' && typeof i.sell === 'number')\n    .map(i => ({\n      list_name: listName,\n      item_uid: i.uid, // ✅ match schema field\n      quantity: i.qty > 0 ? i.qty : 1,\n      sell: isNaN(i.sell) ? 0 : parseFloat(i.sell)\n    }));\n\n  if (rows.length === 0) {\n    console.warn('⚠️ No valid items to upsert.');\n    return false;\n  }\n\n  const { error } = upsert\n    ? await supabase\n        .from('supply_list')\n        .upsert(rows, { onConflict: ['list_name', 'item_uid'] })\n    : await supabase\n        .from('supply_list')\n        .insert(rows);\n\n  if (error) {\n    console.error(`❌ Error ${upsert ? 'upserting' : 'inserting'} supply list items:`, error.message);\n    return false;\n  }\n\n  return true;\n}\n\n\n\n\n\nexport async function editSupplyListItems(listName: string, items: any[], overwrite = true) {\n  if (!items.length) {\n    console.warn('⚠️ No valid items to upsert.');\n    return false;\n  }\n\n  const { error } = await supabase\n    .from('supply_list')\n    .upsert(items, { onConflict: ['list_name', 'item_uid'] });\n\n  if (error) {\n    console.error('❌ Supabase upsert error:', error.message);\n    return false;\n  }\n\n  return true;\n}\n\n\nexport async function saveSupplyListMeta(listName: string, margin: number, shipping: number) {\n  const { error } = await supabase\n    .from('supply_list_meta')\n    .upsert(\n      [{ list_name: listName, margin, shipping_rate: shipping }],\n      { onConflict: ['list_name'] }\n    );\n\n  if (error) {\n    console.error('❌ Supabase error saving supply_list_meta:', error.message);\n    return false;\n  }\n\n  return true;\n}\n\nexport async function checkListNameExists(listName: string): Promise<boolean> {\n  const { data, error } = await supabase\n    .from('supply_list_meta')\n    .select('list_name')\n    .eq('list_name', listName)\n    .limit(1);\n\n  if (error) {\n    console.error('Error checking list name:', error.message);\n    return false;\n  }\n\n  return !!(data && data.length > 0);\n}\n\nexport async function fetchSupplyListMeta(listName: string) {\n  const { data, error } = await supabase\n    .from('supply_list_meta')\n    .select('margin, shipping_rate')\n    .eq('list_name', listName)\n    .limit(1)\n    .single();\n\n  if (error) {\n    console.error('Error fetching supply list meta:', error.message);\n    return null;\n  }\n\n  return data;\n}\n\nexport async function deleteSupplyList(listName: string) {\n  const { error: itemError } = await supabase\n    .from('supply_list')\n    .delete()\n    .eq('list_name', listName);\n\n  const { error: metaError } = await supabase\n    .from('supply_list_meta')\n    .delete()\n    .eq('list_name', listName);\n\n  if (itemError || metaError) {\n    console.error('❌ Failed to delete list:', itemError?.message || metaError?.message);\n    return false;\n  }\n\n  return true;\n}\n","// src/components/Layout.tsx\nimport React, { ReactNode } from 'react';\nimport { Link } from 'gatsby';\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps) => (\n  <>\n    <nav\n      style={{\n        display: 'flex',\n        gap: '1rem',\n        padding: '10px',\n        background: '#f0f0f0',\n        borderBottom: '1px solid #ccc',\n        flexWrap: 'wrap',\n      }}\n    >\n      {/* <Link to=\"/\" style={{ marginRight: 10 }}>✍️ Original</Link> */}\n      <Link to=\"/\" style={{ marginRight: 10 }}>✍️ Lists</Link> \n      <Link to=\"/list-builder\">📥 New List</Link>\n      <Link to=\"/item-builder\">📥 New Item</Link>\n      <Link to=\"/bottom-line\">📤 Average Profit Margin</Link>\n    </nav>\n    <main style={{ padding: '20px' }}>{children}</main>\n  </>\n);\n\nexport default Layout;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useLocation } from '@reach/router';\nimport { navigate } from 'gatsby';\nimport {\n  editSupplyListItems,\n  fetchSupplyListDetails,\n  fetchSupplyListMeta,\n  saveSupplyListMeta,\n} from '../tables/tables';\n\nexport default function ListDetail() {\n  const location = useLocation();\n  const pathParts = location.pathname.split('/').filter(Boolean);\n  const rawId = pathParts[1] || '';\n  const id = decodeURIComponent(rawId);\n\n  const [items, setItems] = useState<any[]>([]);\n  const [targetMargin, setTargetMargin] = useState<number | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [marginDialogOpen, setMarginDialogOpen] = useState(false);\n  const [marginInput, setMarginInput] = useState(30);\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!id) return;\n\n    const loadData = async () => {\n      const [details, meta] = await Promise.all([\n        fetchSupplyListDetails(id),\n        fetchSupplyListMeta(id),\n      ]);\n\n      const enriched = details.items.map((row: any) => {\n        const costEa = row.bulk / row.carton;\n        const costTotal = costEa * row.qty;\n        const totalRetail = row.sell * row.qty;\n        const profit = (row.sell - costEa) * row.qty;\n        return {\n          ...row,\n          costEa,\n          costTotal,\n          totalRetail,\n          profit,\n        };\n      });\n\n      setItems(enriched);\n      setTargetMargin(meta?.desired_margin ?? null);\n      setLoading(false);\n    };\n\n    loadData();\n  }, [id]);\n\n  const updateItem = (index: number, field: string, value: string | number) => {\n    const updated = [...items];\n    const parsedValue = parseFloat(value as string) || 0;\n    updated[index][field] = parsedValue;\n\n    const { bulk, carton, qty, sell } = updated[index];\n    const costEa = bulk / carton;\n    const costTotal = costEa * qty;\n    const totalRetail = sell * qty;\n    const profit = (sell - costEa) * qty;\n\n    updated[index].costEa = costEa;\n    updated[index].costTotal = costTotal;\n    updated[index].totalRetail = totalRetail;\n    updated[index].profit = profit;\n\n    setItems(updated);\n  };\n\n  const applyMarginToAll = () => {\n    const updated = items.map((item) => {\n      const costEa = item.bulk / item.carton;\n      const newSell = costEa / (1 - marginInput / 100);\n      const profit = (newSell - costEa) * item.qty;\n      return {\n        ...item,\n        sell: parseFloat(newSell.toFixed(2)),\n        costEa,\n        costTotal: costEa * item.qty,\n        totalRetail: newSell * item.qty,\n        profit,\n      };\n    });\n    setItems(updated);\n    setMarginDialogOpen(false);\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n    setError('');\n    setSuccess('');\n\n    const mapped = items\n      .filter((i) => i.uid && typeof i.qty === 'number' && typeof i.sell === 'number')\n      .map((i) => ({\n        item_uid: i.uid,\n        list_name: id,\n        quantity: i.qty > 0 ? parseInt(i.qty, 10) : 1,\n        sell: isNaN(i.sell) ? 0 : parseFloat(i.sell),\n      }));\n\n    if (mapped.length === 0) {\n      setError('❌ No valid items to save.');\n      setSaving(false);\n      return;\n    }\n\n    const metaSaved = await saveSupplyListMeta(id, targetMargin ?? 0, 0);\n    const ok = metaSaved && (await editSupplyListItems(id, mapped, true));\n\n    if (ok) {\n      setSuccess('✅ Saved successfully!');\n    } else {\n      setError('❌ Failed to save.');\n    }\n\n    setSaving(false);\n  };\n\n  const totals = useMemo(() => {\n    return items.reduce(\n      (acc, row) => {\n        acc.bulk += row.bulk;\n        acc.cost += row.costEa * row.qty;\n        acc.retail += row.sell * row.qty;\n        acc.profit += row.profit;\n        return acc;\n      },\n      { bulk: 0, cost: 0, retail: 0, profit: 0 }\n    );\n  }, [items]);\n\n  const currentMargin = totals.retail > 0 ? (totals.profit / totals.retail) * 100 : 0;\n\n  if (loading) return <div style={{ padding: 20 }}>Loading...</div>;\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial' }}>\n      <h2>Supply List: {id}</h2>\n\n      {/* <button onClick={() => setMarginDialogOpen(true)} style={{ marginBottom: 10 }}>\n        📈 Set All to X% Profit Margin\n      </button> */}\n\n      {marginDialogOpen && (\n        <div\n          style={{\n            padding: 10,\n            background: '#eee',\n            marginBottom: 20,\n            border: '1px solid #aaa',\n          }}\n        >\n          <label>\n            <strong>Profit Margin (%): </strong>\n          </label>\n          <input\n            type=\"number\"\n            value={marginInput}\n            onChange={(e) => setMarginInput(parseFloat(e.target.value) || 0)}\n            style={{ width: 60, marginLeft: 10 }}\n          />\n          <button onClick={applyMarginToAll} style={{ marginLeft: 10, padding: '4px 12px' }}>\n            Apply\n          </button>\n          <button onClick={() => setMarginDialogOpen(false)} style={{ marginLeft: 10 }}>\n            Cancel\n          </button>\n        </div>\n      )}\n\n      <table border={1} cellPadding={6} cellSpacing={0}>\n        <thead>\n          <tr>\n            <th>ITEM</th>\n            <th>BULK</th>\n            <th>CARTON</th>\n            <th>COST EA.</th>\n            <th>COST TL.</th>\n            <th>QTY</th>\n            <th>SELL</th>\n            <th>TOTAL</th>\n            <th>PROFIT</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((row, idx) => (\n            <tr key={row.sku}>\n              <td\n                onClick={() => navigate(`/items/${row.uid}`)}\n                style={{ cursor: 'pointer', textDecoration: 'underline', color: '#007acc' }}\n              >\n                {row.item}\n              </td>\n              <td>{row.bulk}</td>\n              <td>{row.carton}</td>\n              <td>${row.costEa.toFixed(2)}</td>\n              <td>${row.costTotal.toFixed(2)}</td>\n              <td>\n                <input\n                  type=\"number\"\n                  value={row.qty}\n                  onChange={(e) => updateItem(idx, 'qty', e.target.value)}\n                  style={{ width: 60 }}\n                />\n              </td>\n              <td>${row.sell.toFixed(2)}</td>\n              <td>${row.totalRetail.toFixed(2)}</td>\n              <td>${row.profit.toFixed(2)}</td>\n            </tr>\n          ))}\n\n          <tr>\n            <td colSpan={5}>\n              <strong>Bulk Total</strong>\n            </td>\n            <td colSpan={4}>${totals.bulk.toFixed(2)}</td>\n          </tr>\n          <tr>\n            <td colSpan={5}>\n              <strong>Expenses</strong>\n            </td>\n            <td colSpan={4}>${totals.cost.toFixed(2)}</td>\n          </tr>\n          <tr>\n            <td colSpan={5}>\n              <strong>Revenue</strong>\n            </td>\n            <td colSpan={4}>${totals.retail.toFixed(2)}</td>\n          </tr>\n          <tr>\n            <td colSpan={5}>\n              <strong>Profit</strong>\n            </td>\n            <td colSpan={4}>${totals.profit.toFixed(2)}</td>\n          </tr>\n          <tr>\n            <td colSpan={5}>\n              <strong>Current Margin</strong>\n            </td>\n            <td colSpan={4}>{currentMargin.toFixed(2)}%</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <button onClick={handleSave} disabled={saving} style={{ marginTop: 20, padding: '8px 16px' }}>\n        {saving ? 'Saving...' : '💾 Save Changes'}\n      </button>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {success && <p style={{ color: 'green' }}>{success}</p>}\n    </div>\n  );\n}\n","import React from 'react'\nimport Layout from \"../../components/Layout\";\nimport ListDetail from \"../../components/ListDetailV3\";\n\nexport default () =><Layout>\n  <ListDetail/>\n</Layout>"],"names":["async","fetchPriceItems","data","error","supabase","from","select","console","message","map","item","uid","name","sku","bulk","parseFloat","carton","parseInt","qty","sell","fetchPriceItemById","id","eq","single","savePriceItem","updates","update","success","generateNextSku","count","head","toString","padStart","fetchSupplyLists","order","ascending","row","list_name","fetchSupplyListDetails","listName","items","meta","_row$sell","_row$quantity","costEa","quantity","profit","metaData","metaError","limit","saveSupplyListItems","upsert","rows","filter","i","item_uid","isNaN","length","warn","onConflict","insert","editSupplyListItems","overwrite","saveSupplyListMeta","margin","shipping","shipping_rate","checkListNameExists","fetchSupplyListMeta","deleteSupplyList","itemError","delete","_ref","children","React","style","display","gap","padding","background","borderBottom","flexWrap","Link","to","marginRight","ListDetail","rawId","useLocation","pathname","split","Boolean","decodeURIComponent","setItems","useState","targetMargin","setTargetMargin","loading","setLoading","saving","setSaving","marginDialogOpen","setMarginDialogOpen","marginInput","setMarginInput","setSuccess","setError","useEffect","_meta$desired_margin","details","Promise","all","enriched","costTotal","totalRetail","desired_margin","loadData","totals","useMemo","reduce","acc","cost","retail","currentMargin","fontFamily","marginBottom","border","type","value","onChange","e","target","width","marginLeft","onClick","applyMarginToAll","updated","newSell","toFixed","cellPadding","cellSpacing","idx","key","navigate","cursor","textDecoration","color","updateItem","index","field","_toConsumableArray","parsedValue","colSpan","mapped","disabled","marginTop","Layout"],"sourceRoot":""}