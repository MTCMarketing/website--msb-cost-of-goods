{"version":3,"file":"component---src-pages-items-tsx-69f43897e3672fc49901.js","mappings":"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","sources":["webpack://slap-kommerce-web/./src/tables/tables.ts","webpack://slap-kommerce-web/./src/pages/items/[...].tsx","webpack://slap-kommerce-web/./src/components/Layout.tsx"],"sourcesContent":["import { supabase } from '../supabase';\n\nexport async function fetchPriceItems() {\n  const { data, error } = await supabase\n    .from('price_items')\n    .select('uid, name, sku, bulk, carton');\n\n  if (error) {\n    console.error('Error fetching price items:', error.message);\n    return [];\n  }\n\n  return data.map(item => ({\n    uid: item.uid,\n    item: item.name,\n    sku: item.sku,\n    bulk: parseFloat(item.bulk),\n    carton: parseInt(item.carton),\n    qty: 1,\n    sell: 0\n  }));\n}\n\n\n\nexport async function fetchPriceItemById(id: string) {\n  const { data, error } = await supabase\n    .from('price_items')\n    .select('*')\n    .eq('uid', id)\n    .single();\n\n  if (error) {\n    console.error('Fetch item error:', error.message);\n    return null;\n  }\n\n  return data;\n}\n\nexport async function savePriceItem(uid: string, updates: any) {\n  const { error } = await supabase\n    .from('price_items')\n    .update(updates)\n    .eq('uid', uid);\n\n  return { success: !error, error };\n}\n\nexport async function generateNextSku() {\n  const { count, error } = await supabase\n    .from('price_items')\n    .select('uid', { count: 'exact', head: true });\n\n  if (error) {\n    console.error('Error counting rows in price_items:', error.message);\n    return null;\n  }\n\n  const nextNumber = (count ?? 0) + 1;\n\n  const skuNumber = nextNumber.toString().padStart(3, '0'); // ensures 3 digits\n  return `SKU-${skuNumber}`;\n}\n\nexport async function fetchSupplyLists(): Promise<string[]> {\n  const { data, error } = await supabase\n    .from('supply_list_meta')\n    .select('list_name')\n    .order('list_name', { ascending: true });\n\n  if (error) {\n    console.error('Error fetching list names from meta:', error.message);\n    return [];\n  }\n\n  return data.map(row => row.list_name);\n}\n\n\n\nexport async function fetchSupplyListDetails(listName: string) {\n  const { data, error } = await supabase\n    .from('supply_list')\n    .select(`\n      quantity,\n      sell,\n      item:price_items (\n        uid,\n        name,\n        sku,\n        bulk,\n        carton\n      )\n    `)\n    .eq('list_name', listName);\n\n  if (error) {\n    console.error('Error fetching supply list details:', error.message);\n    return { items: [], meta: null };\n  }\n\n  const items = (data || []).map(row => {\n    const costEa = parseFloat(row.item.bulk) / row.item.carton;\n    const sell = parseFloat(row.sell ?? 0);\n    const qty = row.quantity ?? 1;\n    const profit = (sell - costEa) * qty;\n\n    return {\n      uid: row.item.uid,\n      item: row.item.name,\n      sku: row.item.sku,\n      bulk: parseFloat(row.item.bulk),\n      carton: row.item.carton,\n      costEa,\n      qty,                 // ✅ Important: use 'qty' not 'quantity'\n      sell,\n      profit\n    };\n  });\n\n  const { data: metaData, error: metaError } = await supabase\n    .from('supply_list_meta')\n    .select('margin, shipping_rate')\n    .eq('list_name', listName)\n    .limit(1)\n    .single();\n\n  if (metaError) {\n    console.error('Error fetching supply list meta:', metaError.message);\n  }\n\n  return {\n    items,\n    meta: metaData || null\n  };\n}\n\n\nexport async function saveSupplyListItems(listName: string, items: any[], upsert = false) {\n  // Convert to valid rows with required fields\n  const rows = (items || [])\n    .filter(i => i.uid && typeof i.qty === 'number' && typeof i.sell === 'number')\n    .map(i => ({\n      list_name: listName,\n      item_uid: i.uid, // ✅ match schema field\n      quantity: i.qty > 0 ? i.qty : 1,\n      sell: isNaN(i.sell) ? 0 : parseFloat(i.sell)\n    }));\n\n  if (rows.length === 0) {\n    console.warn('⚠️ No valid items to upsert.');\n    return false;\n  }\n\n  const { error } = upsert\n    ? await supabase\n        .from('supply_list')\n        .upsert(rows, { onConflict: ['list_name', 'item_uid'] })\n    : await supabase\n        .from('supply_list')\n        .insert(rows);\n\n  if (error) {\n    console.error(`❌ Error ${upsert ? 'upserting' : 'inserting'} supply list items:`, error.message);\n    return false;\n  }\n\n  return true;\n}\n\n\n\n\n\nexport async function editSupplyListItems(listName: string, items: any[], overwrite = true) {\n  if (!items.length) {\n    console.warn('⚠️ No valid items to upsert.');\n    return false;\n  }\n\n  const { error } = await supabase\n    .from('supply_list')\n    .upsert(items, { onConflict: ['list_name', 'item_uid'] });\n\n  if (error) {\n    console.error('❌ Supabase upsert error:', error.message);\n    return false;\n  }\n\n  return true;\n}\n\n\nexport async function saveSupplyListMeta(listName: string, margin: number, shipping: number) {\n  const { error } = await supabase\n    .from('supply_list_meta')\n    .upsert(\n      [{ list_name: listName, margin, shipping_rate: shipping }],\n      { onConflict: ['list_name'] }\n    );\n\n  if (error) {\n    console.error('❌ Supabase error saving supply_list_meta:', error.message);\n    return false;\n  }\n\n  return true;\n}\n\nexport async function checkListNameExists(listName: string): Promise<boolean> {\n  const { data, error } = await supabase\n    .from('supply_list_meta')\n    .select('list_name')\n    .eq('list_name', listName)\n    .limit(1);\n\n  if (error) {\n    console.error('Error checking list name:', error.message);\n    return false;\n  }\n\n  return !!(data && data.length > 0);\n}\n\nexport async function fetchSupplyListMeta(listName: string) {\n  const { data, error } = await supabase\n    .from('supply_list_meta')\n    .select('margin, shipping_rate')\n    .eq('list_name', listName)\n    .limit(1)\n    .single();\n\n  if (error) {\n    console.error('Error fetching supply list meta:', error.message);\n    return null;\n  }\n\n  return data;\n}\n\nexport async function deleteSupplyList(listName: string) {\n  const { error: itemError } = await supabase\n    .from('supply_list')\n    .delete()\n    .eq('list_name', listName);\n\n  const { error: metaError } = await supabase\n    .from('supply_list_meta')\n    .delete()\n    .eq('list_name', listName);\n\n  if (itemError || metaError) {\n    console.error('❌ Failed to delete list:', itemError?.message || metaError?.message);\n    return false;\n  }\n\n  return true;\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from '@reach/router';\nimport { fetchPriceItemById, savePriceItem } from '../../tables/tables';\nimport Layout from '../../components/Layout';\n\nexport default function ItemEditor() {\n  const location = useLocation();\n  const pathParts = location.pathname.split('/').filter(Boolean);\n  const rawId = pathParts[1] || '';\n  const id = decodeURIComponent(rawId);\n\n  const [item, setItem] = useState<any>(null);\n  const [saving, setSaving] = useState(false);\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const load = async () => {\n      const data = await fetchPriceItemById(id);\n      if (!data) {\n        setError('❌ Item not found.');\n        setLoading(false);\n        return;\n      }\n\n      const costEa = data.bulk / data.carton;\n      const profit = data.price_each - costEa;\n\n      setItem({\n        ...data,\n        costEa,\n        profit,\n      });\n\n      setLoading(false);\n    };\n\n    load();\n  }, [id]);\n\n  const updateField = (field: 'bulk' | 'carton' | 'price_each', value: number) => {\n    const updated = { ...item, [field]: value };\n\n    const costEa = updated.bulk / updated.carton;\n    const profit = updated.price_each - costEa;\n\n    updated.costEa = costEa;\n    updated.profit = profit;\n\n    setItem(updated);\n  };\n\n  const handleSave = async () => {\n    setSaving(true);\n    setError('');\n    setSuccess('');\n\n    const payload = {\n      bulk: parseFloat(item.bulk),\n      carton: parseInt(item.carton),\n      price_each: parseFloat(item.price_each),\n    };\n\n    const res = await savePriceItem(item.uid, payload);\n\n    if (res?.error) {\n      setError('❌ Failed to save.');\n    } else {\n      setSuccess('✅ Item updated!');\n    }\n\n    setSaving(false);\n  };\n\n  const currentMargin =\n    item && item.price_each > 0 ? (item.profit / item.price_each) * 100 : 0;\n \n\n\n  return (\n     <Layout>\n      { loading ? <div style={{ padding: 20 }}>Loading...</div> : \n    <div style={{ padding: 20, fontFamily: 'Arial' }}>\n      <h2>Edit Item: {item.name}</h2>\n\n      <table border={1} cellPadding={6} cellSpacing={0}>\n        <thead>\n          <tr>\n            <th>Item</th>\n            <th>Bulk</th>\n            <th>Carton</th>\n            <th>Cost Ea.</th>\n            <th>Sell</th>\n            <th>Profit</th>\n            <th>Margin</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{item.name}</td>\n            <td>\n              <input\n                type=\"number\"\n                value={item.bulk}\n                onChange={(e) => updateField('bulk', parseFloat(e.target.value) || 0)}\n                style={{ width: 80 }}\n              />\n            </td>\n            <td>\n              <input\n                type=\"number\"\n                value={item.carton}\n                onChange={(e) => updateField('carton', parseInt(e.target.value) || 1)}\n                style={{ width: 60 }}\n              />\n            </td>\n            <td>${item.costEa.toFixed(2)}</td>\n            <td>\n              <input\n                type=\"number\"\n                value={item.price_each}\n                onChange={(e) => updateField('price_each', parseFloat(e.target.value) || 0)}\n                style={{ width: 80 }}\n              />\n            </td>\n            <td>${item.profit.toFixed(2)}</td>\n            <td>{currentMargin.toFixed(1)}%</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <button onClick={handleSave} disabled={saving} style={{ marginTop: 20, padding: '8px 16px' }}>\n        {saving ? 'Saving...' : '💾 Save'}\n      </button>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {success && <p style={{ color: 'green' }}>{success}</p>}\n    </div>}\n    </Layout>\n  );\n}\n","// src/components/Layout.tsx\nimport React, { ReactNode } from 'react';\nimport { Link } from 'gatsby';\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps) => (\n  <>\n    <nav\n      style={{\n        display: 'flex',\n        gap: '1rem',\n        padding: '10px',\n        background: '#f0f0f0',\n        borderBottom: '1px solid #ccc',\n        flexWrap: 'wrap',\n      }}\n    >\n      {/* <Link to=\"/\" style={{ marginRight: 10 }}>✍️ Original</Link> */}\n      <Link to=\"/\" style={{ marginRight: 10 }}>✍️ Lists</Link> \n      <Link to=\"/list-builder\">📥 New List</Link>\n      <Link to=\"/item-builder\">📥 New Item</Link>\n      <Link to=\"/bottom-line\">📤 Average Profit Margin</Link>\n    </nav>\n    <main style={{ padding: '20px' }}>{children}</main>\n  </>\n);\n\nexport default Layout;\n"],"names":["async","fetchPriceItems","data","error","supabase","from","select","console","message","map","item","uid","name","sku","bulk","parseFloat","carton","parseInt","qty","sell","fetchPriceItemById","id","eq","single","savePriceItem","updates","update","success","generateNextSku","count","head","toString","padStart","fetchSupplyLists","order","ascending","row","list_name","fetchSupplyListDetails","listName","items","meta","_row$sell","_row$quantity","costEa","quantity","profit","metaData","metaError","limit","saveSupplyListItems","upsert","rows","filter","i","item_uid","isNaN","length","warn","onConflict","insert","editSupplyListItems","overwrite","saveSupplyListMeta","margin","shipping","shipping_rate","checkListNameExists","fetchSupplyListMeta","deleteSupplyList","itemError","delete","ItemEditor","rawId","useLocation","pathname","split","Boolean","decodeURIComponent","setItem","useState","saving","setSaving","setSuccess","setError","loading","setLoading","useEffect","price_each","load","updateField","field","value","updated","currentMargin","React","Layout","style","padding","fontFamily","border","cellPadding","cellSpacing","type","onChange","e","target","width","toFixed","onClick","payload","res","disabled","marginTop","color","_ref","children","display","gap","background","borderBottom","flexWrap","Link","to","marginRight"],"sourceRoot":""}